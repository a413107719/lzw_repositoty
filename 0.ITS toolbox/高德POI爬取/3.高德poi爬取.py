# coding:utf-8
import requests
import math
import pymongo


def getpoi(single_coord, featuretype, key, pagenum):
    # global totalnum1
    """
    获取的数据格式如下:
    {'parent': [], 'address': '南坪新街与南坪正街交叉口西北100米', 'distance': [], 'biz_ext': {'cost': [], 'rating': [], 'ticket_ordering': '0'}, 'pname': '重庆市', 'importance': [], 'biz_type': 'tour',
    'cityname': '重庆市', 'type': '风景名胜;风景名胜相关;旅游景点', 'photos': [], 'typecode': '110000', 'shopinfo': '2', 'poiweight': [], 'childtype': [], 'adname': '南岸区', 'name': '长廊议事园',
    'location': '106.571085,29.539080', 'tel': [], 'shopid': [], 'id': 'B0FFH600HP'}
    """
    try:
        url= "https://restapi.amap.com/v3/place/polygon?polygon=" + single_coord + "&types=" + featuretype + "&offset=20" + "&extensions=all" + "&page=" + str(pagenum) + "&output=JSON" + "&key=" + key
        response = requests.get(url)
        answer = response.json()
        count = int(answer['count'])
        namelist = []
        if count < 950:
            pois = answer['pois']
            for dic in pois:
                name = dic['name']
                # print(dic['typecode'], name, dic)
                namelist.append(name)

                # 将子字典转为text
                for key in dic.keys():
                    value = dic[key]
                    if type(value) == dict or list:
                        dic[key] = str(value)
                # 写入mongodb
                mycolumn.update(dic, dic, True)

            print(' ', featuretype, 'countnum=%s'%(count), namelist)

            return count
        else:
            print('%s获取的POI数量超过预设值，将重新切分！' % (str(single_coord)))
            return single_coord
    except Exception as e:
        print('Wrong:', e)


def get_singlekindpoi(featuretype, polygoncoord, key):
    coordlist = [polygoncoord]
    while coordlist:
        # print('循环处理：', coordlist, '\n')
        willexposelist = []
        # 循环获取经纬度范围内的poi
        for coord in coordlist:
            # print('正在处理：' + coord)
            returnvalue = getpoi(coord, featuretype, key,  pagenum=1)
            if type(returnvalue) is int:
                if returnvalue != 0:
                    pagenum = int(math.ceil(returnvalue/20))
                    print("共有%d页数据"%(pagenum))
                    for page in range(2, pagenum + 1):
                        print('  开始爬第%d页' % (page))
                        getpoi(coord, featuretype, key, page)
            else:
                willexposelist.append(coord)

        # print()
        # print('willexposelist:', willexposelist)
        # 切分willexposelist中的要素
        coordlist =[]
        for exposevalue in willexposelist:
            A = float(exposevalue.split('|')[0].split(',')[0])  # coordinate1_lat
            B = float(exposevalue.split('|')[0].split(',')[1])  # coordinate1_lon
            C = float(exposevalue.split('|')[1].split(',')[0])  # coordinate2_lat
            D = float(exposevalue.split('|')[1].split(',')[1])  # coordinate2_lon
            e = round((A + C) / 2, 8)
            f = round((B + D) / 2, 8)
            coord1 = str(A) + ',' + str(B) + '|' + str(e) + ',' + str(f)
            coord2 = str(e) + ',' + str(f) + '|' + str(C) + ',' + str(D)
            coord3 = str(A) + ',' + str(f) + '|' + str(e) + ',' + str(D)
            coord4 = str(e) + ',' + str(B) + '|' + str(C) + ',' + str(f)
            coordlist += [coord1, coord2, coord3, coord4]
        # print('newcoordlist:', coordlist)

# feature = '190000'
# polygoncoord = '103.85074948100004,27.859987800125047|103.96316753600004,27.775174733250054'
# get_singlekindpoi(feature, polygoncoord, "5b6cc66ab2e8a5c0fb5ee4a2d7c0a564")


def get_gaode_poi(feature_types, polygon_coords, key, table):
    global mycolumn

    # mongod参数
    client = pymongo.MongoClient('localhost', 27017)
    mydb = client['zkStudio']
    mycolumn = mydb[table]

    for feature_type in feature_types:
        for polygon_coord in polygon_coords:
            get_singlekindpoi(feature_type, polygon_coord, key)
    print('finish')


if __name__ == '__main__':
    # 设置参数
    gaodekey = "5b6cc66ab2e8a5c0fb5ee4a2d7c0a564"      # 高德key
    tablename= 'test'      # mongod数据表名称
    # 类型、范围参数
    types = ['010000', '020000', '030000', '040000', '050000', '060000', '070000', '080000', '090000', '100000', '110000', '120000', '130000', '140000', '150000', '160000', '170000', '180000', '190000', '200000', '220000', '970000', '990000']
    coords = ['103.85074948100004,27.944800867000044|103.96316753600004,27.859987800125047', '103.96316753600004,27.859987800125047|104.07558559100003,27.775174733250054', '103.96316753600004,27.944800867000044|104.07558559100003,27.859987800125047', '103.85074948100004,27.859987800125047|103.96316753600004,27.775174733250054', '104.07558559100003,27.775174733250054|104.18800364600003,27.690361666375058', '104.18800364600003,27.690361666375058|104.30042170100003,27.60554859950006', '104.18800364600003,27.775174733250054|104.30042170100003,27.690361666375058', '104.07558559100003,27.690361666375058|104.18800364600003,27.60554859950006', '104.07558559100003,27.944800867000044|104.18800364600003,27.859987800125047', '104.18800364600003,27.859987800125047|104.30042170100003,27.775174733250054', '104.18800364600003,27.944800867000044|104.30042170100003,27.859987800125047', '104.07558559100003,27.859987800125047|104.18800364600003,27.775174733250054', '103.85074948100004,27.775174733250054|103.96316753600004,27.690361666375058', '103.96316753600004,27.690361666375058|104.07558559100003,27.60554859950006', '103.96316753600004,27.775174733250054|104.07558559100003,27.690361666375058', '103.85074948100004,27.690361666375058|103.96316753600004,27.60554859950006', '104.30042170100003,27.60554859950006|104.41283975600004,27.520735532625068', '104.41283975600004,27.520735532625068|104.52525781100005,27.43592246575007', '104.41283975600004,27.60554859950006|104.52525781100005,27.520735532625068', '104.30042170100003,27.520735532625068|104.41283975600004,27.43592246575007', '104.52525781100005,27.43592246575007|104.63767586600005,27.351109398875074', '104.63767586600005,27.351109398875074|104.75009392100004,27.26629633200008', '104.63767586600005,27.43592246575007|104.75009392100004,27.351109398875074', '104.52525781100005,27.351109398875074|104.63767586600005,27.26629633200008', '104.52525781100005,27.60554859950006|104.63767586600005,27.520735532625068', '104.63767586600005,27.520735532625068|104.75009392100004,27.43592246575007', '104.63767586600005,27.60554859950006|104.75009392100004,27.520735532625068', '104.52525781100005,27.520735532625068|104.63767586600005,27.43592246575007', '104.30042170100003,27.43592246575007|104.41283975600004,27.351109398875074', '104.41283975600004,27.351109398875074|104.52525781100005,27.26629633200008', '104.41283975600004,27.43592246575007|104.52525781100005,27.351109398875074', '104.30042170100003,27.351109398875074|104.41283975600004,27.26629633200008', '104.30042170100003,27.944800867000044|104.41283975600004,27.859987800125047', '104.41283975600004,27.859987800125047|104.52525781100005,27.775174733250054', '104.41283975600004,27.944800867000044|104.52525781100005,27.859987800125047', '104.30042170100003,27.859987800125047|104.41283975600004,27.775174733250054', '104.52525781100005,27.775174733250054|104.63767586600005,27.690361666375058', '104.63767586600005,27.690361666375058|104.75009392100004,27.60554859950006', '104.63767586600005,27.775174733250054|104.75009392100004,27.690361666375058', '104.52525781100005,27.690361666375058|104.63767586600005,27.60554859950006', '104.52525781100005,27.944800867000044|104.63767586600005,27.859987800125047', '104.63767586600005,27.859987800125047|104.75009392100004,27.775174733250054', '104.63767586600005,27.944800867000044|104.75009392100004,27.859987800125047', '104.52525781100005,27.859987800125047|104.63767586600005,27.775174733250054', '104.30042170100003,27.775174733250054|104.41283975600004,27.690361666375058', '104.41283975600004,27.690361666375058|104.52525781100005,27.60554859950006', '104.41283975600004,27.775174733250054|104.52525781100005,27.690361666375058', '104.30042170100003,27.690361666375058|104.41283975600004,27.60554859950006', '103.85074948100004,27.60554859950006|103.96316753600004,27.520735532625068', '103.96316753600004,27.520735532625068|104.07558559100003,27.43592246575007', '103.96316753600004,27.60554859950006|104.07558559100003,27.520735532625068', '103.85074948100004,27.520735532625068|103.96316753600004,27.43592246575007', '104.07558559100003,27.43592246575007|104.18800364600003,27.351109398875074', '104.18800364600003,27.351109398875074|104.30042170100003,27.26629633200008', '104.18800364600003,27.43592246575007|104.30042170100003,27.351109398875074', '104.07558559100003,27.351109398875074|104.18800364600003,27.26629633200008', '104.07558559100003,27.60554859950006|104.18800364600003,27.520735532625068', '104.18800364600003,27.520735532625068|104.30042170100003,27.43592246575007', '104.18800364600003,27.60554859950006|104.30042170100003,27.520735532625068', '104.07558559100003,27.520735532625068|104.18800364600003,27.43592246575007', '103.85074948100004,27.43592246575007|103.96316753600004,27.351109398875074', '103.96316753600004,27.351109398875074|104.07558559100003,27.26629633200008', '103.96316753600004,27.43592246575007|104.07558559100003,27.351109398875074', '103.85074948100004,27.351109398875074|103.96316753600004,27.26629633200008']

    # 开始运行
    get_gaode_poi(types, coords, gaodekey, tablename)

